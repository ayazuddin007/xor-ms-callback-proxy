<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.xor.app.parent</groupId>
		<artifactId>xor-app-parent</artifactId>
		<version>0.2</version>
	</parent>

	<groupId>com.xor.ms.spring</groupId>
	<artifactId>xor-ms-callback-proxy</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>xor-ms-callback-proxy</name>
	<description>Callback Service for xor</description>

	<properties>
		<java.version>1.8</java.version>
		<resource.delimiter>@</resource.delimiter>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<msDockerBaseImage>openjdk:8-jdk-alpine</msDockerBaseImage>
		<msContextPath>/integration/callback/CallbackSOAP</msContextPath>
		<msContainerPort>9195</msContainerPort>

		<camel.version>3.4.1</camel.version>
		<cxf-xjc.version>3.1.6</cxf-xjc.version>
		<jackson-databind.version>2.11.2</jackson-databind.version>
		<junit.version>4.13</junit.version>
		<logging-schema.version-range>4.0.1</logging-schema.version-range>
		<micrometer-registry-prometheus.version>1.5.5</micrometer-registry-prometheus.version>
		<ojdbc.version>19.7.0.0</ojdbc.version>
		<spring.cloud-version>2020.0.2</spring.cloud-version>
		<spring-boot.version>2.4.3</spring-boot.version>
		<spring-framework.version>5.3.4</spring-framework.version>
		<spring.cloud-version>2020.0.2</spring.cloud-version>
		<micrometer.version>1.6.5</micrometer.version>

		<msMinReplicas>1</msMinReplicas>
		<msCPULimit>1</msCPULimit>
		<msCPURequest>200m</msCPURequest>
		<msMemLimit>512M</msMemLimit>
		<msMemRequest>128m</msMemRequest>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>${spring-boot.version}</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc8</artifactId>
			<version>${ojdbc.version}</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<version>${micrometer-registry-prometheus.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>${cxf-xjc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf-xjc.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-databind.version}</version>
		</dependency>
		<!-- CAMEL Dependencies -->
		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cxf</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-rest</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jackson</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>com.wexinc.schema</groupId>
			<artifactId>LoggingSchema</artifactId>
			<version>${logging-schema.version-range}</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.3.0</version>
		</dependency>
		<!-- Spring Cloud -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-discovery</artifactId>
		</dependency>

		<!--  Metrics and Monitoring  -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
			<version>${micrometer.version}</version>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-statsd</artifactId>
			<version>${micrometer.version}</version>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<version>${micrometer.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.*</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<id>repackage</id>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${start-class}</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.36.0</version>
				<configuration>
					<containerNamePattern>%n-%t</containerNamePattern>
				</configuration>
				<executions>
					<execution>
						<id>build-docker-image</id>
						<goals>
							<goal>build</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<showLogs>true</showLogs>
							<verbose>build</verbose>
							<images>
								<image>
									<alias>${project.artifactId}</alias>
									<name>${xorDockerImage}</name>
									<build>
										<dockerFile>${project.basedir}/src/main/docker/Dockerfile</dockerFile>
										<assembly>
											<basedir>/</basedir>
											<inline>
												<files>
													<file>
														<source>${project.build.directory}/${project.artifactId}-${project.version}.jar</source>
														<outputDirectory>ms</outputDirectory>
														<destName>${project.artifactId}.jar</destName>
														<fileMode>0755</fileMode>
													</file>
												</files>
											</inline>
										</assembly>
									</build>
								</image>
							</images>
						</configuration>
					</execution>
					<execution>
						<id>push-docker-image</id>
						<goals>
							<goal>push</goal>
						</goals>
						<phase>deploy</phase>
						<configuration>
							<showLogs>true</showLogs>
							<images>
								<image>
									<alias>${project.artifactId}</alias>
									<name>${xorDockerImage}</name>
									<build/>
								</image>
							</images>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>package-kubernetes-manifests</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<attach>true</attach>
							<descriptors>
								<descriptor>src/main/assembly/kubernetes-manifests.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Generate Java-Classes inkl. JAXB-Bindings from WSDL & imported XSD -->
			<!-- See Doku at http://www.mojohaus.org/jaxws-maven-plugin/usage.html -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxws-maven-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<wsdlUrls>
						<wsdlUrl>src/main/resources/wsdl/xorCallback.wsdl</wsdlUrl>
					</wsdlUrls>
					<sourceDestDir>target/generated-sources/wsdlimport/xorcallback</sourceDestDir>
					<vmArgs>
						<vmArg>-Djavax.xml.accessExternalSchema=all</vmArg>
					</vmArgs>
				</configuration>
				<executions>
					<execution>
						<id>wsimport</id>
						<goals>
							<goal>wsimport</goal>
						</goals>
						<configuration>
							<useJdkToolchainExecutable>true</useJdkToolchainExecutable>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/wsdlimport/xorcallback</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
